---
- name: Create AWS instances for {{ ami_user}} to build out AMI.
  hosts: localhost
  gather_facts: no
  strategy: debug
  vars_files:
    - aws_vars.yml
  pre_tasks:
  - name: Check if 'ami_build_type' is defined
    fail:
      msg: "ERROR! The variable 'ami_build_type' must be defined!"
    when: not ami_build_type is defined
  tasks:
  - name: Provision AMI instance on AWS for "{{ ami_build_type }}"
    ec2:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      key_name: "{{ aws_key_name }}"
      group: "{{ aws_sec_group }}"
      instance_type: "{{ ami_inst_type }}"
      image: "{{ rhel_ami_id }}"
      wait: yes
      instance_tags:
        Name: "ami-{{ ami_user }}-{{ ami_name }}.{{ domain_name }}"
        ami_user: "{{ ami_user }}"
        ami_build_type: "{{ ami_build_type }}"
        student_id: "{{ ami_user }}-ami"
      vpc_subnet_id: "{{ aws_subnet_id }}"
      zone: "{{ aws_az_1 }}"
      assign_public_ip: yes
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: "{{ ami_root_disk_size }}"
          delete_on_termination: true
      region: "{{ aws_region }}"
      state: present
    register: instance_created

  - debug:
      var: instance_created
      verbosity: 1

  - name: Wait for ssh
    wait_for:
      port: 22
      host: "{{ instance_created.instances.0.public_ip }}"
      timeout: 1000
    ignore_errors: yes

  - add_host:
      hostname: "{{ instance_created.instances.0.tags.Name }}"
      ansible_host: "{{ instance_created.instances.0.public_ip }}"
      public_dns_name: "{{ instance_created.instances.0.public_dns_name }}"
      public_ip: "{{ instance_created.instances.0.public_ip }}"
      groups: instance
      student_id: "{{ instance_created.instances.0.tags.student_id }}"

  - debug:
      var: groups
      verbosity: 1

- name: Create AWS route53 entries for Tower instances
  hosts: instance
  gather_facts: no
  vars_files:
    - aws_vars.yml
  vars:
    - ansible_user: ec2-user

  tasks:
    - debug:
        var: hostvars
        verbosity: 1

    - name: Register route53 entries
      local_action:
        module: route53
        command: create
        aws_access_key: "{{ec2_access_key}}"
        aws_secret_key: "{{ec2_secret_key}}"
        zone: "{{ domain_name }}"
        type: A
        overwrite: True
        ttl: 60
        record: "{{ inventory_hostname }}"
        value: "{{ public_ip }}"
        wait: yes

    - name: Wait for resolvable route53 hostname
      local_action: command host {{ inventory_hostname }}
      register: host_result
      until: host_result.rc == 0
      retries: 60
      delay: 5

- import_playbook: ami-builder.yml
  when: ami_build_type is defined
...
